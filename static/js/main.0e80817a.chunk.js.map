{"version":3,"sources":["components/InputFileld.js","redux/action/todo.action.js","components/TodoItem.js","components/TodoList.js","App.js","redux/reducer/addTodo.reducer.js","redux/store.js","index.js"],"names":["InputField","props","state","todo","inputref","React","createRef","val","this","current","value","setState","event","preventDefault","addTodo","onSubmit","type","placeholder","ref","onChange","onValueChange","todoSelected","Component","connect","dispatch","payload","addTodoAction","deleteTodo","idx","deleteTodoAction","selectTodo","todoSelectionAction","console","log","className","onClick","todos","map","App","initialState","selectedTodoIdx","todoStore","createStore","action","push","todoList","splice","applyMiddleware","logger","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.0e80817a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodoAction } from \"../redux/action/todo.action\";\r\n\r\nclass InputField extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { todo: \"\" };\r\n    this.inputref = React.createRef();\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.todoSelected !== \"\" && state.todo === \"\") {\r\n      return { ...state, todo: props.todoSelected };\r\n    }\r\n  }\r\n\r\n  onValueChange() {\r\n    const val = this.inputref.current.value;\r\n    this.setState({ todo: val });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.addTodo(this.state.todo);\r\n    this.setState({ todo: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={(event) => this.onSubmit(event)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Todo\"\r\n          ref={this.inputref}\r\n          value={this.state.todo}\r\n          onChange={() => this.onValueChange()}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addTodo: (todo) => dispatch(addTodoAction(todo))\r\n});\r\n\r\nconst mapStateToProps = ({ todoSelected }) => ({\r\n  todoSelected\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\r\n","export const addTodoAction = (todo) => ({\r\n  type: \"ADD_TODO\",\r\n  payload: todo\r\n});\r\n\r\nexport const deleteTodoAction = (idx) => ({\r\n  type: \"DELETE_TODO\",\r\n  payload: idx\r\n});\r\n\r\nexport const todoSelectionAction = (idx) => ({\r\n  type: \"SELECT_TODO\",\r\n  payload: idx\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteTodoAction,\r\n  todoSelectionAction\r\n} from \"../redux/action/todo.action\";\r\n\r\nfunction TodoItem(props) {\r\n  console.log(props);\r\n  const { todo, idx, deleteTodo, selectTodo } = props;\r\n\r\n  const todoItemRemove = (event) => {\r\n    event.preventDefault();\r\n    deleteTodo(idx);\r\n  };\r\n\r\n  const todoSelector = (event) => {\r\n    event.preventDefault();\r\n    selectTodo(idx);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list-item\">\r\n      <div className=\"todo-item\" onClick={todoSelector}>\r\n        {todo}\r\n      </div>\r\n      <div className=\"todo-item-remove\" onClick={todoItemRemove}>\r\n        x\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteTodo: (idx) => dispatch(deleteTodoAction(idx)),\r\n    selectTodo: (idx) => dispatch(todoSelectionAction(idx))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TodoList.css\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction TodoList(props) {\r\n  const { todos = [] } = props;\r\n\r\n  return (\r\n    <div className=\"todo-list-container\">\r\n      {todos?.map((todo, idx) => (\r\n        <TodoItem key={idx} todo={todo} idx={idx} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ todos }) => ({ todos });\r\n\r\nexport default connect(mapStateToProps)(TodoList);\r\n","import \"./styles.css\";\nimport InputField from \"./components/InputFileld.js\";\nimport TodoList from \"./components/TodoList\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Todo App</h1>\n      <InputField />\n      <TodoList />\n    </div>\n  );\n}\n","const initialState = {\r\n  todos: [],\r\n  todoSelected: \"\",\r\n  selectedTodoIdx: \"\"\r\n};\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n  console.log(\"[Reducer] - \", action);\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      const todos = [...state.todos];\r\n      if (state.selectedTodoIdx) {\r\n        todos[state.selectedTodoIdx] = action.payload;\r\n      } else {\r\n        todos.push(action.payload);\r\n      }\r\n      return {\r\n        ...state,\r\n        todoSelected: \"\",\r\n        selectedTodoIdx: \"\",\r\n        todos: todos\r\n      };\r\n    case \"DELETE_TODO\":\r\n      let todoList = [...state.todos];\r\n      todoList.splice(action.payload, 1);\r\n      return {\r\n        ...state,\r\n        todoSelected: \"\",\r\n        selectedTodoIdx: \"\",\r\n        todos: todoList\r\n      };\r\n    case \"SELECT_TODO\":\r\n      return {\r\n        ...state,\r\n        selectedTodoIdx: action.payload,\r\n        todoSelected: state.todos[action.payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { todoReducer } from \"./reducer/addTodo.reducer\";\r\nimport { logger } from \"redux-logger\";\r\n\r\nexport const todoStore = createStore(todoReducer, applyMiddleware(logger));\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { todoStore } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={todoStore}>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}