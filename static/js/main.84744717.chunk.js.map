{"version":3,"sources":["components/Todo/InputFileld.js","redux/action/todo.action.js","components/Todo/TodoItem.js","components/Todo/TodoList.js","components/Todo/Todo.js","redux/action/user.action.js","components/Users/User.js","components/Users/Users.js","App.js","redux/reducer/addTodo.reducer.js","redux/reducer/user.reducer.js","redux/store.js","index.js"],"names":["InputField","props","state","todo","inputref","React","createRef","val","this","current","value","setState","event","preventDefault","addTodo","onSubmit","type","placeholder","ref","onChange","onValueChange","todoSelected","Component","connect","todoReducer","dispatch","payload","addTodoAction","deleteTodo","idx","deleteTodoAction","selectTodo","todoSelectionAction","console","log","className","onClick","todos","map","Todo","fetchUsersAction","usersList","User","name","email","userReducer","fetchUsers","fetch","then","res","json","response","data","user","first_name","App","initialState","selectedTodoIdx","intialUserState","rootReducer","combineReducers","action","push","todoList","splice","todoStore","createStore","applyMiddleware","thunk","logger","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.84744717.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodoAction } from \"../../redux/action/todo.action\";\r\n\r\nclass InputField extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { todo: \"\" };\r\n    this.inputref = React.createRef();\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.todoSelected !== \"\" && state.todo === \"\") {\r\n      return { ...state, todo: props.todoSelected };\r\n    }\r\n  }\r\n\r\n  onValueChange() {\r\n    const val = this.inputref.current.value;\r\n    this.setState({ todo: val });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.addTodo(this.state.todo);\r\n    this.setState({ todo: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={(event) => this.onSubmit(event)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Your Todo\"\r\n          ref={this.inputref}\r\n          value={this.state.todo}\r\n          onChange={() => this.onValueChange()}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addTodo: (todo) => dispatch(addTodoAction(todo))\r\n});\r\n\r\nconst mapStateToProps = ({ todoReducer }) => ({\r\n  todoSelected: todoReducer.todoSelected\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\r\n","export const addTodoAction = (todo) => ({\r\n  type: \"ADD_TODO\",\r\n  payload: todo\r\n});\r\n\r\nexport const deleteTodoAction = (idx) => ({\r\n  type: \"DELETE_TODO\",\r\n  payload: idx\r\n});\r\n\r\nexport const todoSelectionAction = (idx) => ({\r\n  type: \"SELECT_TODO\",\r\n  payload: idx\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteTodoAction,\r\n  todoSelectionAction\r\n} from \"../../redux/action/todo.action\";\r\n\r\nfunction TodoItem(props) {\r\n  console.log(props);\r\n  const { todo, idx, deleteTodo, selectTodo } = props;\r\n\r\n  const todoItemRemove = (event) => {\r\n    event.preventDefault();\r\n    deleteTodo(idx);\r\n  };\r\n\r\n  const todoSelector = (event) => {\r\n    event.preventDefault();\r\n    selectTodo(idx);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-list-item\">\r\n      <div className=\"todo-item\" onClick={todoSelector}>\r\n        {todo}\r\n      </div>\r\n      <div className=\"todo-item-remove\" onClick={todoItemRemove}>\r\n        x\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteTodo: (idx) => dispatch(deleteTodoAction(idx)),\r\n    selectTodo: (idx) => dispatch(todoSelectionAction(idx))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TodoList.css\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction TodoList(props) {\r\n  const { todos = [] } = props;\r\n\r\n  return (\r\n    <div className=\"todo-list-container\">\r\n      {todos?.map((todo, idx) => (\r\n        <TodoItem key={idx} todo={todo} idx={idx} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ todoReducer }) => {\r\n  console.log(todoReducer);\r\n  return { todos: todoReducer.todos };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodoList);\r\n","import React from \"react\";\r\nimport InputField from \"./InputFileld\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction Todo() {\r\n  return (\r\n    <>\r\n      <InputField />\r\n      <TodoList />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","export const fetchUsersList = (data) => {\r\n  return (dispatch) => {\r\n    fetch(\"https://reqres.in/api/users?page=1\")\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        dispatch(fetchUsersAction(response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUsersAction = (usersList) => ({\r\n  type: \"FETCH_USERS\",\r\n  payload: {\r\n    usersList\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport \"./User.css\";\r\n\r\nfunction User(props) {\r\n  return (\r\n    <div className=\"user-list\">\r\n      <div className=\"user-name user-detail\">{props.name}</div>\r\n      <div className=\"user-email user-detail\">{props.email}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUsersList } from \"../../redux/action/user.action\";\r\nimport User from \"./User\";\r\nimport \"./User.css\";\r\n\r\nfunction Users(props) {\r\n  const { usersList, fetchUsers } = props;\r\n  const getUserList = () => {\r\n    fetchUsers();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"btn-control\" onClick={getUserList}>\r\n        Get User List\r\n      </button>\r\n      <div className=\"user-list-container\">\r\n        {usersList.map((user, idx) => (\r\n          <User name={user.first_name} email={user.email} key={idx} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ userReducer }) => ({\r\n  usersList: userReducer.usersList\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchUsers: () => dispatch(fetchUsersList())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\r\n","import \"./styles.css\";\nimport Todo from \"./components/Todo/Todo\";\nimport Users from \"./components/Users/Users\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Redux & Thunk App</h1>\n      <div className=\"todo-user-container\">\n        <div className=\"todo-container\">\n          <Todo />\n        </div>\n        <div className=\"user-container\">\n          <Users />\n        </div>\n      </div>\n    </div>\n  );\n}\n","const initialState = {\r\n  todos: [],\r\n  todoSelected: \"\",\r\n  selectedTodoIdx: \"\"\r\n};\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n  console.log(\"[Reducer] - \", action);\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      const todos = [...state.todos];\r\n      if (state.selectedTodoIdx) {\r\n        todos[state.selectedTodoIdx] = action.payload;\r\n      } else {\r\n        todos.push(action.payload);\r\n      }\r\n      return {\r\n        ...state,\r\n        todoSelected: \"\",\r\n        selectedTodoIdx: \"\",\r\n        todos: todos\r\n      };\r\n    case \"DELETE_TODO\":\r\n      let todoList = [...state.todos];\r\n      todoList.splice(action.payload, 1);\r\n      return {\r\n        ...state,\r\n        todoSelected: \"\",\r\n        selectedTodoIdx: \"\",\r\n        todos: todoList\r\n      };\r\n    case \"SELECT_TODO\":\r\n      return {\r\n        ...state,\r\n        selectedTodoIdx: action.payload,\r\n        todoSelected: state.todos[action.payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const intialUserState = {\r\n  usersList: []\r\n};\r\n\r\nexport const userReducer = (state = intialUserState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"FETCH_USERS\":\r\n      return {\r\n        ...state,\r\n        usersList: [...action.payload.usersList]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { todoReducer } from \"./reducer/addTodo.reducer\";\r\nimport { userReducer } from \"./reducer/user.reducer\";\r\nimport { logger } from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({ todoReducer, userReducer });\r\nexport const todoStore = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk, logger)\r\n);\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { todoStore } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={todoStore}>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}